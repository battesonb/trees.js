{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Components/Camera.ts","src/Components/Canvas.ts","src/Components/Colliders/AABB.ts","src/Components/Colliders/Collider.ts","src/Components/EventSystem.ts","src/Components/Renderer.ts","src/Components/SpatialHash.ts","src/Models/Node.ts","src/Types/Point2D.ts","src/main.ts"],"names":[],"mappings":"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","file":"trees.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Point2D from \"../Types/Point2D\";\r\n\r\nexport default class Camera {\r\n  position: Point2D;\r\n  _zoom: number;\r\n\r\n  constructor(x: number = 0, y: number = 0, zoom: number = 1) {\r\n    this.position = new Point2D(x, y);\r\n    this.setZoom(zoom);\r\n  }\r\n\r\n  setZoom(zoom: number) {\r\n    this._zoom = Math.max(0.05, Math.min(50, zoom));\r\n  }\r\n\r\n  getZoom(): number {\r\n    return this._zoom;\r\n  }\r\n}","export default class Canvas {\r\n  canvas: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n\r\n  _fontSize: number;\r\n  _fontFamily: string;\r\n\r\n  constructor(id: string) {\r\n    this.canvas = <HTMLCanvasElement>document.getElementById(id);\r\n    this.context = this.canvas.getContext(\"2d\");\r\n\r\n    this.context.textBaseline = \"top\";\r\n\r\n    this._fontSize = 18;\r\n    this._fontFamily = \"Arial\";\r\n    this._updateFont();\r\n  }\r\n\r\n  clear(): void {\r\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n\r\n  getTextWidth(text: string): number {\r\n    return this.context.measureText(text).width;\r\n  }\r\n\r\n  setFill(style: string | CanvasGradient | CanvasPattern): void {\r\n    this.context.fillStyle = style;\r\n  }\r\n\r\n  setStroke(style: string | CanvasGradient | CanvasPattern): void {\r\n    this.context.strokeStyle = style;\r\n  }\r\n\r\n  setStrokeSize(size: number = 1): void {\r\n    this.context.lineWidth = size;\r\n  }\r\n\r\n  setFontSize(size: number): void {\r\n    this._fontSize = size;\r\n    this._updateFont();\r\n  }\r\n\r\n  setFontFamily(family: string): void {\r\n    this._fontFamily = family;\r\n    this._updateFont();\r\n  }\r\n\r\n  _updateFont(): void {\r\n    this.context.font = this._fontSize + \"px \" + this._fontFamily;\r\n  }\r\n\r\n  drawRect(x: number, y: number, w: number, h: number, stroke?: boolean, shadow?: boolean): void {\r\n    if(stroke) {\r\n      this.context.strokeRect(x, y, w, h);\r\n    } else {\r\n      this.context.fillRect(x, y, w, h);\r\n    }\r\n  }\r\n  \r\n  drawArc(x: number, y: number, r: number, startAngle: number, endAngle: number, stroke?: boolean): void {\r\n    this.context.beginPath();\r\n    this.context.arc(x, y, r, startAngle, endAngle);\r\n    this.context.closePath();\r\n    if(stroke) {\r\n      this.context.stroke();\r\n    } else {\r\n      this.context.fill();\r\n    }\r\n  }\r\n\r\n  drawLine(x1: number, y1: number, x2: number, y2: number): void {\r\n    this.context.beginPath();\r\n    this.context.moveTo(x1, y1);\r\n    this.context.lineTo(x2, y2);\r\n    this.context.closePath();\r\n    this.context.stroke();\r\n  }\r\n\r\n  // TODO add line-wrap\r\n  drawText(text: string, x: number, y: number, stroke?: boolean, maxWidth?: number): void {\r\n    if(stroke) {\r\n      this.context.strokeText(text, x, y);\r\n    } else {\r\n      this.context.fillText(text, x, y);\r\n    }\r\n  }\r\n\r\n  drawRoundedRect(x: number, y: number, w: number, h: number, r: number, stroke?: boolean): void {\r\n    if (w < 2 * r) r = w / 2;\r\n    if (h < 2 * r) r = h / 2;\r\n    this.context.beginPath();\r\n    this.context.moveTo(x + r, y);\r\n    this.context.arcTo(x + w, y, x + w, y + h, r);\r\n    this.context.arcTo(x + w, y + h, x, y + h, r);\r\n    this.context.arcTo(x, y + h, x, y, r);\r\n    this.context.arcTo(x, y, x + w, y, r);\r\n    this.context.closePath();\r\n    if(stroke) {\r\n      this.context.stroke();\r\n    } else {\r\n      this.context.fill();\r\n    }\r\n  }\r\n\r\n  enableShadows(blur: number, offsetX: number = 0, offsetY: number = 0, color: string = \"black\") {\r\n    this.context.shadowBlur = 8;\r\n    this.context.shadowColor = color;\r\n    this.context.shadowOffsetX = offsetX;\r\n    this.context.shadowOffsetY = offsetY;\r\n  }\r\n\r\n  clearShadows() {\r\n    this.context.shadowBlur = 0;\r\n    this.context.shadowOffsetX = 0;\r\n    this.context.shadowOffsetY = 0;\r\n  }\r\n}","import Collider from \"./Collider\";\r\nimport Point2D from \"../../Types/Point2D\";\r\n\r\n/**\r\n * Represents an AABB with top-left alignment.\r\n */\r\nexport default class AABB extends Collider {\r\n  _width: number;\r\n  _height: number;\r\n\r\n  constructor(x: number, y: number, width: number = 0, height: number = 0) {\r\n    super(x, y);\r\n    this._width = width;\r\n    this._height = height;\r\n  }\r\n\r\n  contains(x: number, y: number): boolean {\r\n    return x >= this.position.x && y >= this.position.y && x <= this.position.x + this.width() && y <= this.position.x + this.height();\r\n  }\r\n\r\n  overlaps(other: Collider): boolean {\r\n    if(other instanceof AABB) {\r\n      return Math.abs(this.position.x - other.position.x) * 2 < this.width() + other.width() &&\r\n             Math.abs(this.position.y - other.position.y) * 2 < this.height() + other.height();\r\n    }\r\n    throw Error(\"Unknown collider type, cannot determine overlap.\");\r\n  }\r\n\r\n  topLeft(): Point2D {\r\n    return this.position;\r\n  }\r\n\r\n  height(): number {\r\n    return this._height;\r\n  }\r\n\r\n  width(): number {\r\n    return this._width;\r\n  }\r\n}","import Point2D from \"../../Types/Point2D\";\r\n\r\nexport default abstract class Collider {\r\n  position: Point2D;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.position = new Point2D(x, y);\r\n  }\r\n\r\n  /**\r\n   * Returns true if the given point is within the collider.\r\n   * @param x\r\n   * @param y \r\n   */\r\n  abstract contains(x: number, y: number): boolean;\r\n\r\n  /**\r\n   * Returns true if the collider overlaps with the given collider.\r\n   * @param collider \r\n   */\r\n  abstract overlaps(other: Collider): boolean;\r\n\r\n  /**\r\n   * Returns the top-left position of the collider.\r\n   */\r\n  abstract topLeft(): Point2D;\r\n\r\n  abstract height(): number;\r\n  abstract width(): number;\r\n}","import Camera from \"./Camera\";\r\nimport Node from \"../Models/Node\";\r\nimport Renderer from \"./Renderer\";\r\nimport SpatialHash from \"./SpatialHash\";\r\n\r\nexport default class EventSystem {\r\n  _camera: Camera;\r\n  _currentNode: Node;\r\n  _clientX: number;\r\n  _clientY: number;\r\n  _hash: SpatialHash;\r\n  _renderer: Renderer;\r\n\r\n  constructor(camera: Camera, renderer: Renderer) {\r\n    this._hash = new SpatialHash(24);\r\n    this._camera = camera;\r\n    this._currentNode = null;\r\n    this._renderer = renderer;\r\n\r\n    window.addEventListener(\"mousedown\", this.mouseDown.bind(this));\r\n  }\r\n\r\n  mouseDown(event: MouseEvent) {\r\n    this._currentNode = <Node>this._hash.find(event.clientX / this._camera.getZoom() - this._camera.position.x, event.clientY / this._camera.getZoom() + this._camera.position.x);\r\n    this._clientX = event.clientX;\r\n    this._clientY = event.clientY;\r\n    window.addEventListener(\"mousemove\", this.mouseMove.bind(this));\r\n    window.addEventListener(\"mouseup\", this.mouseUp.bind(this));\r\n  }\r\n\r\n  mouseMove(event: MouseEvent) {\r\n    let dx = (event.clientX - this._clientX) / this._camera.getZoom();\r\n    let dy = (event.clientY - this._clientY) / this._camera.getZoom();\r\n    if(this._currentNode === null) {\r\n      this._camera.position.x+= dx;\r\n      this._camera.position.y+= dy;\r\n    } else {\r\n      this._currentNode.position.x+= dx;\r\n      this._currentNode.position.y+= dy;\r\n    }\r\n    \r\n    this._renderer.clear();\r\n    this._renderer.drawTree(undefined);\r\n\r\n    this._clientX = event.clientX;\r\n    this._clientY = event.clientY;\r\n  }\r\n\r\n  mouseUp(event: MouseEvent) {\r\n    console.log(\"HELLO?\");\r\n    this._currentNode = null;\r\n    window.removeEventListener(\"mousemove\", this.mouseMove);\r\n    window.removeEventListener(\"mouseup\", this.mouseUp);\r\n  }\r\n}","import Canvas from \"./Canvas\";\r\nimport Camera from \"./Camera\";\r\nimport Node from \"../Models/Node\";\r\nimport Tree from \"../Models/Tree\";\r\n\r\nexport default class Renderer {\r\n  canvas: Canvas;\r\n  _camera: Camera;\r\n  _options: any;\r\n\r\n  constructor(id: string, camera: Camera, options: any) {\r\n    this.canvas = new Canvas(id);\r\n    this._camera = camera;\r\n    this._options = options;\r\n\r\n    this.canvas.setFontFamily(options.text.family);\r\n\r\n    this.drawTree(undefined);\r\n  }\r\n\r\n  clear(): void {\r\n    this.canvas.clear();\r\n  }\r\n\r\n  drawTree(tree: Tree): void {\r\n    let node = new Node(\"Hello\", 0);\r\n    node._width = 70;\r\n    node._height = 24;\r\n    this.drawNode(node);\r\n  }\r\n\r\n  drawNode(node: Node): void {\r\n    if(this._options.shadow.node.blur > 0) {\r\n      this.canvas.enableShadows(this._options.shadow.node.blur, this._options.shadow.node.offsetX, this._options.shadow.node.offsetY, this._options.shadow.node.color);\r\n    } else {\r\n      this.canvas.clearShadows();\r\n    }\r\n    this.canvas.setStroke(this._options.node.stroke.color);\r\n    this.canvas.setStrokeSize(this._options.node.stroke.size);\r\n    this.canvas.setFill(this._options.node.color);\r\n    this.canvas.drawRoundedRect((node.position.x + this._camera.position.x) * this._camera.getZoom(), (node.position.y + this._camera.position.y) * this._camera.getZoom(), node.width() * this._camera.getZoom(), node.height() * this._camera.getZoom(), this._options.node.rounded * this._camera.getZoom(), false);\r\n  \r\n    if(this._options.shadow.text.blur > 0) {\r\n      this.canvas.enableShadows(this._options.shadow.text.blur, this._options.shadow.text.offsetX, this._options.shadow.text.offsetY, this._options.shadow.text.color);\r\n    } else {\r\n      this.canvas.clearShadows();\r\n    }\r\n    this.canvas.setFontSize(this._options.text.size * this._camera.getZoom());\r\n    this.canvas.setStroke(this._options.text.stroke.color);\r\n    this.canvas.setStrokeSize(this._options.text.stroke.size);\r\n    this.canvas.setFill(this._options.text.color);\r\n    this.canvas.drawText(node.getText(), (node.position.x + this._camera.position.x) * this._camera.getZoom(), (node.position.y + this._camera.position.y) * this._camera.getZoom(), this._options.text.stroke.size > 0, 100 * this._camera.getZoom());\r\n  }\r\n\r\n  drawPaths(node: Node): void {\r\n    if(this._options.shadow.path.blur > 0) {\r\n      this.canvas.enableShadows(this._options.shadow.path.blur, this._options.shadow.path.offsetX, this._options.shadow.path.offsetY, this._options.shadow.path.color);\r\n    } else {\r\n      this.canvas.clearShadows();\r\n    }\r\n    this.canvas.setStroke(this._options.path.color);\r\n    this.canvas.setStrokeSize(this._options.path.size);\r\n    for(let i = 0; i < node._children.length; i++) {\r\n      this.canvas.drawLine((node.position.x + this._camera.position.x) * this._camera.getZoom(), (node.position.y + this._camera.position.y) * this._camera.getZoom(), (node[i].position.x + this._camera.position.x) * this._camera.getZoom(), (node[i].position.y + this._camera.position.y) * this._camera.getZoom());\r\n    }\r\n  }\r\n}","import Collider from './Colliders/Collider';\r\nimport Point2D from '../Types/Point2D';\r\n\r\n/**\r\n * A spatial hash based on AABB world coordinates.\r\n */\r\nexport default class SpatialHash {\r\n  _bucketSize: number;\r\n  _inverseBucketSize: number;\r\n  _map: object;\r\n\r\n  constructor(bucketSize: number = 24) {\r\n    this._map = {};\r\n    this._bucketSize = bucketSize;\r\n    this._inverseBucketSize = 1 / bucketSize;\r\n  }\r\n\r\n  /**\r\n   * Given a collider, return the points within the hash in which the collider lies.\r\n   * @param collider The collider\r\n   */\r\n  getPoints(collider: Collider) : Array<Point2D> {\r\n    let points: Array<Point2D> = [];\r\n    let moveH: number = 0;\r\n    let position: Point2D = collider.topLeft();\r\n    let width: number = collider.width();\r\n    let height: number = collider.height();\r\n    while(true) {\r\n      let moveV: number = 0;\r\n      while(true) {\r\n        let x: number = Math.floor((position.x + moveH) * this._inverseBucketSize);\r\n        let y: number = Math.floor((position.y + moveV) * this._inverseBucketSize);\r\n        points.push(new Point2D(x, y));\r\n        if (moveV > height) {\r\n          break;\r\n        }\r\n        moveV+= this._bucketSize;\r\n      }\r\n      if (moveH > width) {\r\n        break;\r\n      }\r\n      moveH+= this._bucketSize;\r\n    }\r\n    return points;\r\n  }\r\n\r\n  /**\r\n   * Add a collider to the hash, assuming it is not already within the hash.\r\n   * @param collider\r\n   */\r\n  add(collider: Collider) : void {\r\n    let points: Array<Point2D> = this.getPoints(collider);\r\n\r\n    points.forEach(point => {\r\n      let hash = this.toHashLong(point.x, point.y);\r\n      if(this._map[hash] === undefined) {\r\n        this._map[hash] = new Set();\r\n      }\r\n      this._map[hash].add(collider);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Removes the given collider from the hash.\r\n   * @param collider\r\n   * @return true if collider is removed, false otherwise.\r\n   */\r\n  remove(collider: Collider) : boolean {\r\n    let removed: boolean = false;\r\n    let points: Array<Point2D>  = this.getPoints(collider);\r\n\r\n    points.forEach(point => {\r\n      let hash = this.toHashLong(point.x, point.y);\r\n      if(this._map[hash] !== undefined) {\r\n        if (this._map[hash].delete(collider)) {\r\n          removed = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    return removed;\r\n  }\r\n\r\n  /**\r\n   * Given a world-point, return an array of all colliders in the corresponding segment.\r\n   * @param x \r\n   * @param y \r\n   */\r\n  getNearby(x: number, y: number): Array<Collider> {\r\n    let hash = this.toHashLong(x, y);\r\n    let set = this._map[hash];\r\n    if(set) {\r\n      return set.entries();\r\n    }    \r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * Given a world-point, return the first collider containing the world-point in the corresponding segment.\r\n   * @param x \r\n   * @param y \r\n   */\r\n  find(x: number, y: number): Collider {\r\n    let colliders: Array<Collider> = this.getNearby(x, y);\r\n    for(let i = 0; i < colliders.length; i++) {\r\n      if(colliders[i].contains(x, y)) {\r\n        return colliders[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Given a collider in the hash, move it by x and y points.\r\n   * @param collider\r\n   * @param x \r\n   * @param y \r\n   */\r\n  move(collider: Collider, x: number, y: number) : void {\r\n    this.remove(collider);\r\n    collider.position.x += x;\r\n    collider.position.y += y;\r\n    this.add(collider);\r\n  }\r\n\r\n  /**\r\n   * Convert a point to a unique 32-bit number representing the x/y coordinates in the hash.\r\n   * @param point\r\n   */\r\n  toHashLong(x: number, y: number): number {\r\n    x = Math.round(x) & 0xFFFF; // cast to 16-bit\r\n    y = (Math.round(y) & 0xFFFF) << 32; // cast to 16-bit and then shift 15-bits to the left.\r\n    return x | y;\r\n  }  \r\n}","import AABB from \"../Components/Colliders/AABB\";\r\n\r\n/**\r\n * The representation of a node of the tree.\r\n */\r\nexport default class Node extends AABB {\r\n  _id: number;\r\n  _children: Array<Node>;\r\n  _text: string;\r\n  parent: Node;\r\n\r\n  constructor(text: string, id: number = undefined, x: number = 0, y: number = 0) {\r\n    super(x, y);\r\n    this.setText(text);\r\n    this.setId(id);\r\n  }\r\n\r\n  /**\r\n   * Sets the identifier of the node. Uniqueness of the identifier is not determined.\r\n   * @param id\r\n   */\r\n  setId(id: number): void {\r\n    this._id = id;\r\n  }\r\n\r\n  getId(): number {\r\n    return this._id;\r\n  }\r\n\r\n  setText(text: string): void {\r\n    this._text = text;\r\n  }\r\n\r\n  getText(): string {\r\n    return this._text;\r\n  }\r\n\r\n  /**\r\n   * Adds a child to the current node and sets the parent of the child as the object of the calling the method.\r\n   * @param child \r\n   */\r\n  addChild(child: Node): void {\r\n    this._children.push(child);\r\n    child.parent = this;\r\n  }\r\n\r\n  /**\r\n   * Gets the child with a specific identifier.\r\n   * TODO make faster with a binary search, maybe? Probably not though.\r\n   * @param id\r\n   */\r\n  getChild(id: number): Node {\r\n    for(let i = 0; i < this._children.length; i++) {\r\n      let child = this._children[i];\r\n      if(child.getId() === id) {\r\n        return child;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}","export default class Point2D {\r\n  x: number;\r\n  y: number;\r\n\r\n  constructor(x: number = 0, y: number = 0) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}","import Camera from \"./Components/Camera\";\r\nimport EventSystem from \"./Components/EventSystem\";\r\nimport Renderer from \"./Components/Renderer\";\r\nimport Tree from \"./Models/Tree\";\r\n\r\nexport default class TreesJS {\r\n  _camera: Camera;\r\n  _eventSystem: EventSystem;\r\n  _renderer: Renderer;\r\n  _tree: Tree;\r\n\r\n  constructor(id: string, options?: any) {\r\n    if(options === undefined) {\r\n      options = {};\r\n    }\r\n\r\n    if(options.node === undefined) {\r\n      options.node = {};\r\n    }\r\n    if(options.node.color === undefined) {\r\n      options.node.color = \"#FFAA55\";\r\n    }\r\n    if(options.node.rounded === undefined) {\r\n      options.node.rounded = 4;\r\n    }\r\n    if(options.node.stroke === undefined) {\r\n      options.node.stroke = {};\r\n    }\r\n    if(options.node.stroke.color === undefined) {\r\n      options.node.stroke.color = \"#000\";\r\n    }\r\n    if(options.node.stroke.size === undefined) {\r\n      options.node.stroke.size = 0;\r\n    }\r\n\r\n    if(options.path === undefined) {\r\n      options.path = {};\r\n    }\r\n    if(options.path.color === undefined) {\r\n      options.path.color = \"#55AAFF\";\r\n    }\r\n    if(options.path.size === undefined) {\r\n      options.path.size = 2;\r\n    }\r\n\r\n    if(options.text === undefined) {\r\n      options.text = {};\r\n    }\r\n    if(options.text.color === undefined) {\r\n      options.text.color = \"#FFF\";\r\n    }\r\n    if(options.text.family === undefined) {\r\n      options.text.family = \"Arial\";\r\n    }\r\n    if(options.text.size === undefined) {\r\n      options.text.size = 18;\r\n    }\r\n    if(options.text.stroke === undefined) {\r\n      options.text.stroke = {};\r\n    }\r\n    if(options.text.stroke.color === undefined) {\r\n      options.text.stroke.color = \"#000\";\r\n    }\r\n    if(options.text.stroke.size === undefined) {\r\n      options.text.stroke.size = 0;\r\n    }\r\n\r\n    if(options.shadow === undefined) {\r\n      options.shadow = {};\r\n    }\r\n    if(options.shadow.node === undefined) {\r\n      options.shadow.node = {};\r\n    }\r\n    if(options.shadow.node.blur === undefined) {\r\n      options.shadow.node.blur = 8;\r\n    }\r\n    if(options.shadow.node.color === undefined) {\r\n      options.shadow.node.color = \"rgba(0, 0, 0, 0.25)\";\r\n    }\r\n    if(options.shadow.node.offsetX === undefined) {\r\n      options.shadow.node.offsetX = 0;\r\n    }\r\n    if(options.shadow.node.offsetY === undefined) {\r\n      options.shadow.node.offsetY = 4;\r\n    }\r\n    if(options.shadow.path === undefined) {\r\n      options.shadow.path = {};\r\n    }\r\n    if(options.shadow.path.blur === undefined) {\r\n      options.shadow.path.blur = 0;\r\n    }\r\n    if(options.shadow.path.color === undefined) {\r\n      options.shadow.path.color = \"#000\";\r\n    }\r\n    if(options.shadow.path.offsetX === undefined) {\r\n      options.shadow.path.offsetX = 0;\r\n    }\r\n    if(options.shadow.path.offsetY === undefined) {\r\n      options.shadow.path.offsetY = 0;\r\n    }\r\n    if(options.shadow.text === undefined) {\r\n      options.shadow.text = {};\r\n    }\r\n    if(options.shadow.text.blur === undefined) {\r\n      options.shadow.text.blur = 1;\r\n    }\r\n    if(options.shadow.text.color === undefined) {\r\n      options.shadow.text.color = \"rgba(0, 0, 0, 0.3)\";\r\n    }\r\n    if(options.shadow.text.offsetX === undefined) {\r\n      options.shadow.text.offsetX = 0;\r\n    }\r\n    if(options.shadow.text.offsetY === undefined) {\r\n      options.shadow.text.offsetY = 0;\r\n    }\r\n\r\n    this._camera = new Camera(0, 0, 2);\r\n    this._renderer = new Renderer(id, this._camera, options);\r\n    this._eventSystem = new EventSystem(this._camera, this._renderer);\r\n  }\r\n}\r\n\r\n/*\r\n// Example of options object.\r\noptions = {\r\n  node: {\r\n    color: \"#FFAA55\",\r\n    rounded: 5,\r\n    stroke: {\r\n      color: \"#000\"\r\n      size: 0\r\n    }\r\n  },\r\n  path: {\r\n    color: \"#55AAFF\",\r\n    size: 2\r\n  },\r\n  text: {\r\n    color: \"#FFF\",\r\n    family: \"Arial\",\r\n    size: 18,\r\n    stroke: {\r\n      color: \"#000\",\r\n      size: 0\r\n    }\r\n  },\r\n  shadow: {\r\n    node: {\r\n      blur: 8,\r\n      color: \"rgba(0, 0, 0, 0.25)\",\r\n      offsetX: 0,\r\n      offsetY: 4\r\n    },\r\n    path: {\r\n      blur: 0,\r\n      color: \"#000\",\r\n      offsetX: 0,\r\n      offsetY: 0\r\n    },\r\n    text: {\r\n      blur: 0,\r\n      color: \"#000\",\r\n      offsetX: 0,\r\n      offsetY: 0\r\n    }\r\n  }\r\n}\r\n*/\r\n\r\n(<any>window).TreesJS = TreesJS;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}